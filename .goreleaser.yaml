before:
  hooks:
    - go mod tidy
    - go generate ./...
builds:
  - id: flowpipe

    # Custom ldflags.
    #
    # Default: '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser'
    # Templates: allowed
    ldflags:
      # Go Releaser analyzes your Git repository and identifies the most recent Git tag (typically the highest version number) as the version for your release.
      # This is how it determinse the value of {{.Version}}.
      - -s -w -X main.version={{.Version}} -X version.buildTime={{.Date}} -X version.commit={{.Commit}} -X version.builtBy=goreleaser

    # Default: [ 'darwin', 'linux', 'windows' ]
    goos:
      - linux
      - darwin

    # Default: [ '386', 'amd64', 'arm64' ]
    goarch:
      - amd64
      - arm64

    env:
      - CGO_ENABLED=0

release:
  # Always set as pre-release. Publishing release must be done manually.
  prerelease: true

archives:
  - format: tar.gz
    # Additional files/globs
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}.
      {{- .Os }}.
      {{- if eq .Arch "amd64" }}amd64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}

  - id: homebrew
    files:
      - none*
    format: zip
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
    format_overrides:
    - goos: linux
      format: tar.gz

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  skip: true
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

brews:
  - ids:
      - homebrew
    name: flowpipe@{{ .Major }}.{{ .Minor }}.{{ .Patch }}
    tap:
      owner: turbot
      name: homebrew-tap
      branch: flowpipe-brew
    folder: Formula
    url_template: "https://github.com/turbot/flowpipe/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    homepage: "https://flowpipe.io/"
    description: "Flowpipe: The cloud scripting engine."
    skip_upload: auto
    install: |-
      bin.install "flowpipe"