name: Flowpipe Release

on:
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

jobs:
  create_release_tag:
    name: Tag Release
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.calculate_version.outputs.VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Calculate version
        id: calculate_version
        run: |
          beta_tag_timestamp=$(date -u +%Y%m%d%H%M)
          VERSION=$(echo "v0.1.0-beta.$beta_tag_timestamp")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Tag Release
        run: |
          git config user.name "Flowpipe GitHub Actions Bot"
          git config user.email noreply@github.com
          git tag $VERSION
          git push origin $VERSION

  build_and_release:
    name: Release
    needs: create_release_tag
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Flowpipe repository
        uses: actions/checkout@v3
        with:
          path: flowpipe
          ref: ${{ needs.create_release_tag.outputs.VERSION }}

      - name: Checkout Flowpipe SDK Go repository
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.FLOWPIPE_GO_SDK_DEPLOY_PRIVATE_KEY }}
          repository: turbot/flowpipe-sdk-go
          path: flowpipe-sdk-go

      - name: Checkout Terraform Components repository
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.TERRAFORM_COMPONENTS_DEPLOY_PRIVATE_KEY }}
          repository: turbot/terraform-components
          path: terraform-components

      - name: Checkout Pipe Fittings Components repository
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.PIPE_FITTINGS_DEPLOY_PRIVATE_KEY }}
          repository: turbot/pipe-fittings
          path: pipe-fittings

      # this is required, check golangci-lint-action docs
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false # setup-go v4 caches by default, do not change this parameter, check golangci-lint-action doc: https://github.com/golangci/golangci-lint-action/pull/704

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
          workdir: flowpipe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          VERSION: ${{ needs.create_release_tag.outputs.VERSION }}
