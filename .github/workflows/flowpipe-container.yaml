name: Container - Build and Release

# Triggers the workflow manually with an input for release version.
on:
  workflow_dispatch:
    inputs:
      release:
        description: "Flowpipe version (without 'v')"
        required: true

# Sets environment variables used across all jobs in this workflow.
env:
  # Sets the Flowpipe version to the input release version.
  FLOWPIPE_VERSION: ${{ github.event.inputs.release }}
  # Sets the GitHub write token for authorization.
  GH_WRITE_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  # Sets the repository owner.
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  # Sets the image description.
  IMAGE_DESCRIPTION: 'Flowpipe is a cloud scripting engine. Automation and workflow to connect your clouds to the people, systems and data that matter. Pipelines for DevOps written in HCL.'

# Defines the build and release job.
jobs:
  build_and_release:
    name: Build and Release
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    steps:

      # Checks out the Flowpipe repository code.
      - name: Checkout Flowpipe repository
        uses: actions/checkout@v3
        with:
          path: flowpipe  # Directory path under $GITHUB_WORKSPACE to place the repository.

      # Sets up QEMU for multi-architecture builds, allowing builds for architectures like ARM and AMD64.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Sets up Docker Buildx for extended Docker build capabilities, including building multi-arch images.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Logs in to the GitHub Container Registry to allow pushing and pulling images.
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.REPOSITORY_OWNER }}
          password: ${{ env.GH_WRITE_TOKEN }}

      # Cleans the version input for Docker tagging.
      - name: Clean Version for Tag
        id: generate_docker_tag
        run: |
          echo "docker_tag=${FLOWPIPE_VERSION#"v"}" >> $GITHUB_OUTPUT

      # Builds the Docker image and pushes it to the GitHub Container Registry.
      - name: Build and Push to Container Registry
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          # The Docker build context.
          context: flowpipe/
          push: true
          platforms: linux/amd64, linux/arm64
          build-args: |
            TARGETVERSION=${{ env.FLOWPIPE_VERSION }}
          tags: |
            ghcr.io/${{ env.REPOSITORY_OWNER }}/flowpipe:${{ steps.generate_docker_tag.outputs.docker_tag }}
            ghcr.io/${{ env.REPOSITORY_OWNER }}/flowpipe:latest
          outputs: type=image,name=flowpipe,annotation-index.org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}

      # Outputs the image digest after the build.
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
